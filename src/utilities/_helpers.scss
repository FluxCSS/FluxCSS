// Utility classes for common layout tasks

.d-flex {
    display: flex;
}

.justify-content-center {
    justify-content: center;
}

.align-items-center {
    align-items: center;
}

// Spacing utilities using margin-inline, padding-inline, margin-block, and padding-block
@each $breakpoint, $width in $breakpoints {
    @include respond-to($breakpoint) {
        @each $key, $value in $spacing {
            .m-#{$breakpoint}-#{$key} {
                margin: $value;
            }
            .mt-#{$breakpoint}-#{$key} {
                margin-block-start: $value;
            }
            .me-#{$breakpoint}-#{$key} {
                margin-inline-end: $value;
            }
            .mb-#{$breakpoint}-#{$key} {
                margin-block-end: $value;
            }
            .ms-#{$breakpoint}-#{$key} {
                margin-inline-start: $value;
            }
            .mx-#{$breakpoint}-#{$key} {
                margin-inline: $value;
            }
            .my-#{$breakpoint}-#{$key} {
                margin-block: $value;
            }

            .p-#{$breakpoint}-#{$key} {
                padding: $value;
            }
            .pt-#{$breakpoint}-#{$key} {
                padding-block-start: $value;
            }
            .pe-#{$breakpoint}-#{$key} {
                padding-inline-end: $value;
            }
            .pb-#{$breakpoint}-#{$key} {
                padding-block-end: $value;
            }
            .ps-#{$breakpoint}-#{$key} {
                padding-inline-start: $value;
            }
            .px-#{$breakpoint}-#{$key} {
                padding-inline: $value;
            }
            .py-#{$breakpoint}-#{$key} {
                padding-block: $value;
            }

            .gap-#{$breakpoint}-#{$key} {
                gap: $value;
            }
        }
        .mx-#{$breakpoint}-auto {
            margin-inline: auto;
        }

    }
}

@each $key, $value in $spacing {
    .m-#{$key} {
        margin: $value;
    }
    .mt-#{$key} {
        margin-block-start: $value;
    }
    .me-#{$key} {
        margin-inline-end: $value;
    }
    .mb-#{$key} {
        margin-block-end: $value;
    }
    .ms-#{$key} {
        margin-inline-start: $value;
    }
    .mx-#{$key} {
        margin-inline: $value;
    }
    .my-#{$key} {
        margin-block: $value;
    }

    .p-#{$key} {
        padding: $value;
    }
    .pt-#{$key} {
        padding-block-start: $value;
    }
    .pe-#{$key} {
        padding-inline-end: $value;
    }
    .pb-#{$key} {
        padding-block-end: $value;
    }
    .ps-#{$key} {
        padding-inline-start: $value;
    }
    .px-#{$key} {
        padding-inline: $value;
    }
    .py-#{$key} {
        padding-block: $value;
    }
}

.mx-auto{
    margin-inline: auto
}

// Generate width utility classes
@each $key, $value in $size-scale {
    .w-#{$key} {
        width: $value;
    }
    .min-w-#{$key} {
        min-width: $value;
    }
    .max-w-#{$key} {
        max-width: $value;
    }
}

// Generate height utility classes
@each $key, $value in $size-scale {
    .h-#{$key} {
        height: $value;
    }
    .min-h-#{$key} {
        min-width: $value;
    }
    .max-h-#{$key} {
        max-width: $value;
    }
}

// Utility classes for viewport width and height
// Generate width utility classes
@each $key, $value in $viewport-size-scale {
    .vw-#{$key} {
        width: #{$value}vw;
    }
    .min-vw-#{$key} {
        min-width: #{$value}vw;
    }
    .max-vw-#{$key} {
        max-width: #{$value}vw;
    }
}

// Generate height utility classes
@each $key, $value in $viewport-size-scale {
    .vh-#{$key} {
        height: #{$value}vh;
    }
    .min-vh-#{$key} {
        min-height: #{$value}vh;
    }
    .max-vh-#{$key} {
        max-height: #{$value}vh;
    }
}


// Text alignment helpers
.text-start {
    text-align: start !important;
}

.text-center {
    text-align: center !important;
}

.text-end {
    text-align: end !important;
}


// Positioning helpers
.pos-static {
    position: static;
}

.pos-relative {
    position: relative;
}

.pos-absolute {
    position: absolute;
}

.pos-fixed {
    position: fixed;
}

.pos-sticky {
    position: sticky;
}

// Top positioning
.top-0 {
    top: 0;
}

.top-50 {
    top: 50%;
}

.top-100 {
    top: 100%;
}

// End positioning
.end-0 {
    inset-inline-end: 0;
}

.end-50 {
    inset-inline-end: 50%;
}

.end-100 {
    inset-inline-end: 100%;
}

// Bottom positioning
.bottom-0 {
    bottom: 0;
}

.bottom-50 {
    bottom: 50%;
}

.bottom-100 {
    bottom: 100%;
}

// Start positioning
.start-0 {
    inset-inline-start: 0;
}

.start-50 {
    inset-inline-start: 50%;
}

.start-100 {
    inset-inline-start: 100%;
}

// Translate helpers
.translate-x-middle {
    transform: translateX(-50%);
}

.translate-y-middle {
    transform: translateY(-50%);
}

.translate-middle {
    transform: translate(-50%, -50%);
}

