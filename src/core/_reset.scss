@charset "UTF-8";
@use 'sass:map';
/*!
 * FluxCSS v0.0.6 (https://fluxcss.org/)
 * Copyright 2025 FluxCSS.org
 * Licensed under GPL (https://github.com/FluxCSS/FluxCSS/blob/main/LICENSE)
 */
// Comprehensive reset for HTML elements
// Function to convert hex to rgb
@function hex-to-rgb($color) {
    @return red($color) green($color) blue($color);
}

// Mixin to generate CSS variables
@mixin generate-css-vars($colors) {
    @each $key, $value in $colors {
        --#{$prefix}-#{$key}: #{$value};
        --#{$prefix}-rgb-#{$key}: #{rgb(hex-to-rgb($value))};
    }
}

// Utiliser le mixin pour générer les variables CSS
:root {
    $all-colors: $theme-colors;
    @if $use-all-colors == true {
        $all-colors: map.deep-merge($theme-colors, $palette-colors);
    }

    @include generate-css-vars(
        $all-colors
    );

    --#{$prefix}-border-color: #{$border-color};
    --#{$prefix}-shadow-color: #{$default-shadow-color};
    --#{$prefix}-shadow-size: #{$default-shadow-size};
    --#{$prefix}-font-family: #{$base-font-family};
    --#{$prefix}-border-radius: #{$base-border-radius};
    --#{$prefix}-link-color: #{$primary};

}

/* Box-sizing */
*,
*::before,
*::after {
    box-sizing: border-box;
}

/* Remove default margin and padding */
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
    margin: 0;
    padding: 0;
    border: 0;
    font-size: 100%;
    font: inherit;
    vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
    display: block;
}

body {
    font-family: $base-font-family;
    font-size: map-get($font-sizes, 3); // Standard size
    line-height: $line-height-base;
    font-weight: map-get($font-weights, 4); // Regular weight
}

ol, ul {
    list-style: none;
}

blockquote, q {
    quotes: none;
}

blockquote::before, blockquote::after,
q::before, q::after {
    content: '';
    content: none;
}

table {
    border-collapse: collapse;
    border-spacing: 0;
}

/* Remove default styles for links */
a {
    color: var(--#{$prefix}-link-color);
    text-decoration: none;
}

/* Remove default styles for buttons */
button, input, select, textarea {
    font-family: inherit;
    font-size: 100%;
    margin: 0;
}

/* Remove default styles for form elements */
input, textarea {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    border-radius: 0;
}

/* Ensure consistent vertical alignment of form elements */
button, input, select, textarea {
    vertical-align: middle;
}

/* Remove default styles for images */
img {
    border-style: none;
    vertical-align: middle;
}

/* Ensure consistent rendering of hr elements */
hr {
    box-sizing: content-box;
    height: 0;
    overflow: visible;
}

/* Ensure consistent rendering of pre elements */
pre {
    overflow: auto;
}

/* Ensure consistent rendering of code and kbd elements */
code, kbd, pre, samp {
    font-family: monospace, monospace;
    font-size: 1em;
}

/* Ensure consistent rendering of buttons */
button, input[type="button"], input[type="reset"], input[type="submit"] {
    background: none;
    border: none;
    cursor: pointer;
}

/* Ensure consistent rendering of textareas */
textarea {
    overflow: auto;
    resize: vertical;
}

/* Ensure consistent rendering of fieldsets */
fieldset {
    border: 0;
    margin: 0;
    padding: 0;
}

/* Ensure consistent rendering of legends */
legend {
    border: 0;
    padding: 0;
}

/* Ensure consistent rendering of details and summary elements */
details, summary {
    display: block;
}

/* Ensure consistent rendering of audio and video elements */
audio, video {
    display: inline-block;
}

/* Ensure consistent rendering of iframes */
iframe {
    border: 0;
}

// Base styles
// Headings
h1, h2, h3, h4, h5, h6 {
    font-family: $base-font-family;
    font-weight: map-get($font-weights, 7); // Bold weight
    line-height: $line-height-base;
    margin-top: 0;
    margin-bottom: 0.5em;
}

h1 { font-size: map-get($font-sizes, 7); }
h2 { font-size: map-get($font-sizes, 6); }
h3 { font-size: map-get($font-sizes, 5); }
h4 { font-size: map-get($font-sizes, 4); }
h5 { font-size: map-get($font-sizes, 3); }
h6 { font-size: map-get($font-sizes, 2); }

// Paragraphs
p {
    margin-bottom: 1em;
}

code {
    font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace;
    font-size: 0.9em;
    color: #d63384;
    background-color: #f8f9fa;
    padding: 0.2em 0.4em;
    border-radius: 0.25rem;
    white-space: nowrap;
}

pre {
    code {
        display: block;
        padding: 1rem;
        overflow-x: auto;
        white-space: pre;
        background-color: #f8f9fa;
        border: 1px solid #e9ecef;
        border-radius: 0.25rem;
        color: #212529;
    }
}