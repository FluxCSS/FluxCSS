// Form control base styles
.form-control {
    display: block;
    width: 100%;
    min-height: 1rem;
    padding: $input-padding-y $input-padding-x;
    font-size: $font-size-base;
    line-height: $line-height-base;
    color: $input-color;
    background-color: $input-bg;
    background-clip: padding-box;
    border: $input-border-width solid $input-border-color;
    border-radius: $input-border-radius;
    transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;

    &:focus {
        color: $input-color;
        background-color: $input-bg;
        border-color: $input-focus-border-color;
        outline: 0;
        box-shadow: $input-focus-box-shadow;
    }

    &::placeholder {
        color: $input-placeholder-color;
        opacity: 1;
    }

    &:disabled,
    &[readonly] {
        background-color: $input-disabled-bg;
        opacity: 1;
    }
}

// Form group
.form-group {
    margin-bottom: $form-group-margin-bottom;

    label {
        display: inline-block;
        margin-bottom: 0.5rem;
        font-weight: 500;
    }
}

// Form text for help or error messages
.form-text {
    display: block;
    margin-top: $form-text-margin-top;
    font-size: 0.875em;
    color: $form-text-color;
}

// Form validation states
.is-valid {
    border-color: $success;

    &:focus {
        border-color: $success;
        box-shadow: 0 0 0 0.2rem rgba($success, 0.25);
    }
}

.is-invalid {
    border-color: $danger;

    &:focus {
        border-color: $danger;
        box-shadow: 0 0 0 0.2rem rgba($danger, 0.25);
    }
}

// Validation feedback
.valid-feedback,
.invalid-feedback {
    display: none;
    width: 100%;
    margin-top: $form-text-margin-top;
    font-size: 0.875em;
}

.valid-feedback {
    color: $success;
}

.invalid-feedback {
    color: $danger;
}

// Show the feedback when the form is validated
.was-validated .form-control:valid ~ .valid-feedback,
.form-control.is-valid ~ .valid-feedback {
    display: block;
}

.was-validated .form-control:invalid ~ .invalid-feedback,
.form-control.is-invalid ~ .invalid-feedback {
    display: block;
}

// Form check (checkboxes and radios)
.form-check {
    position: relative;
    display: block;
    padding-left: $form-check-input-gutter;
    margin-bottom: $form-check-margin-bottom;

    .form-check-input {
        position: absolute;
        margin-top: $form-check-input-margin-y;
        margin-left: -$form-check-input-gutter;
        width: 1rem;
        height: 1rem;
        appearance: none;
        background-color: $input-bg;
        border: $input-border-width solid $input-border-color;

        &[type="checkbox"] {
            border-radius: 0.25rem;

            &:checked {
                background-color: $primary;
                border-color: $primary;
                background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3e%3cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3e%3c/svg%3e");
                background-repeat: no-repeat;
                background-position: center;
                background-size: 0.75rem;
            }
        }

        &[type="radio"] {
            border-radius: 50%;

            &:checked {
                background-color: $primary;
                border-color: $primary;
                background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='2' fill='%23fff'/%3e%3c/svg%3e");
                background-repeat: no-repeat;
                background-position: center;
                background-size: 0.5rem;
            }
        }

        &:focus {
            outline: 0;
            border-color: $input-focus-border-color;
            box-shadow: $input-focus-box-shadow;
        }

        &:disabled {
            pointer-events: none;
            filter: none;
            opacity: 0.5;
        }
    }

    .form-check-label {
        margin-bottom: 0;
        cursor: pointer;
    }
}

// Switch
.form-switch {
    position: relative;
    display: inline-block;
    padding-left: $form-switch-padding-left;
    margin-bottom: $form-check-margin-bottom;

    .form-check-input {
        position: absolute;
        margin-left: -$form-switch-padding-left;
        width: $form-switch-width;
        height: $form-switch-height;
        cursor: pointer;
        appearance: none;
        background-color: $form-switch-bg-color;
        border-radius: $form-switch-border-radius;
        transition: $form-switch-transition;
        border: none;

        &:before {
            content: "";
            position: absolute;
            top: $form-switch-handle-margin;
            left: $form-switch-handle-margin;
            width: $form-switch-handle-size;
            height: $form-switch-handle-size;
            background-color: $form-switch-handle-color;
            border-radius: 50%;
            transition: $form-switch-transition;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
        }

        &:checked {
            background-color: $form-switch-active-bg-color;

            &:before {
                transform: translateX($form-switch-width - $form-switch-handle-size - ($form-switch-handle-margin * 2));
            }
        }

        &:focus {
            outline: 0;
            box-shadow: 0 0 0 0.25rem $form-switch-focus-color;
        }

        &:disabled {
            opacity: 0.5;
            cursor: not-allowed;

            &:before {
                box-shadow: none;
            }
        }
    }

    .form-check-label {
        position: relative;
        margin-bottom: 0;
        vertical-align: middle;
        cursor: pointer;
        user-select: none;
    }
}

// Switch with check/cross icons
.form-switch-icon {
    .form-check-input {
        &:after {
            content: "";
            position: absolute;
            right: $form-switch-handle-margin * 3;
            top: 50%;
            transform: translateY(-50%);
            width: 0.75rem;
            height: 0.75rem;
            background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='rgba(255,255,255,0.6)' stroke-width='4' stroke-linecap='round' stroke-linejoin='round'%3E%3Cline x1='18' y1='6' x2='6' y2='18'%3E%3C/line%3E%3Cline x1='6' y1='6' x2='18' y2='18'%3E%3C/line%3E%3C/svg%3E");
            background-size: contain;
            background-repeat: no-repeat;
            background-position: center;
        }

        &:checked:after {
            left: $form-switch-handle-margin * 3;
            right: auto;
            background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='rgba(255,255,255,0.6)' stroke-width='4' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='20 6 9 17 4 12'%3E%3C/polyline%3E%3C/svg%3E");
        }
    }
}

// Switch with on/off text
.form-switch-text {
    .form-check-input {
        &:before {
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 0.625rem;
            font-weight: bold;
            color: $form-switch-handle-color;
        }

        &:after {
            content: "OFF";
            position: absolute;
            right: $form-switch-handle-margin * 3;
            top: 50%;
            transform: translateY(-50%);
            font-size: 0.625rem;
            font-weight: bold;
            color: rgba(255, 255, 255, 0.8);
        }

        &:checked:after {
            content: "ON";
            left: $form-switch-handle-margin * 3;
            right: auto;
        }
    }
}

// Switch with light/dark mode icons
.form-switch-theme {
    .form-check-input {
        &:after {
            content: "";
            position: absolute;
            right: $form-switch-handle-margin * 3;
            top: 50%;
            transform: translateY(-50%);
            width: 0.75rem;
            height: 0.75rem;
            background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='rgba(255,255,255,0.6)' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Ccircle cx='12' cy='12' r='5'%3E%3C/circle%3E%3Cline x1='12' y1='1' x2='12' y2='3'%3E%3C/line%3E%3Cline x1='12' y1='21' x2='12' y2='23'%3E%3C/line%3E%3Cline x1='4.22' y1='4.22' x2='5.64' y2='5.64'%3E%3C/line%3E%3Cline x1='18.36' y1='18.36' x2='19.78' y2='19.78'%3E%3C/line%3E%3Cline x1='1' y1='12' x2='3' y2='12'%3E%3C/line%3E%3Cline x1='21' y1='12' x2='23' y2='12'%3E%3C/line%3E%3Cline x1='4.22' y1='19.78' x2='5.64' y2='18.36'%3E%3C/line%3E%3Cline x1='18.36' y1='5.64' x2='19.78' y2='4.22'%3E%3C/line%3E%3C/svg%3E");
            background-size: contain;
            background-repeat: no-repeat;
            background-position: center;
        }

        &:checked:after {
            left: $form-switch-handle-margin * 3;
            right: auto;
            background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='rgba(255,255,255,0.6)' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpath d='M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z'%3E%3C/path%3E%3C/svg%3E");
        }
    }
}

// Select
select.form-control {
    padding-right: 2rem;
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='%23343a40' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M2 5l6 6 6-6'/%3e%3c/svg%3e");
    background-repeat: no-repeat;
    background-position: right 0.75rem center;
    background-size: 16px 12px;
    appearance: none;

    &::-ms-expand {
        display: none;
    }
}

// Form sizes
.form-control-sm {
    height: calc(1.5em + 0.5rem + 2px);
    padding: 0.25rem 0.5rem;
    font-size: 0.875rem;
    line-height: 1.5;
    border-radius: $input-border-radius * 0.75;
}

.form-control-lg {
    height: calc(1.5em + 1rem + 2px);
    padding: 0.5rem 1rem;
    font-size: 1.25rem;
    line-height: 1.5;
    border-radius: $input-border-radius * 1.25;
}

// Form row
.form-row {
    display: flex;
    flex-wrap: wrap;
    margin-right: -5px;
    margin-left: -5px;

    > .col,
    > [class*="col-"] {
        padding-right: 5px;
        padding-left: 5px;
    }
}

// Inline form
.form-inline {
    display: flex;
    flex-flow: row wrap;
    align-items: center;

    .form-group {
        display: flex;
        flex: 0 0 auto;
        flex-flow: row wrap;
        align-items: center;
        margin-bottom: 0;
        margin-right: 0.5rem;
    }

    .form-control {
        display: inline-block;
        width: auto;
        vertical-align: middle;
    }

    label {
        display: flex;
        align-items: center;
        justify-content: center;
        margin-bottom: 0;
        margin-right: 0.5rem;
    }

    .form-check {
        display: flex;
        align-items: center;
        justify-content: center;
        width: auto;
        padding-left: 0;
        margin-right: 0.5rem;
    }

    .form-check-input {
        position: relative;
        margin-top: 0;
        margin-right: 0.25rem;
        margin-left: 0;
    }

    // Stack form elements on small screens
    @media (max-width: map-get($breakpoints, sm)) {
        flex-direction: column;
        align-items: stretch;

        .form-group {
            width: 100%;
            margin-right: 0;
        }

        .form-control {
            width: 100%;
        }
    }
}

// Custom file input
.custom-file {
    position: relative;
    display: inline-block;
    width: 100%;
    margin-bottom: 0;

    .custom-file-input {
        position: relative;
        z-index: 2;
        width: 100%;
        margin: 0;
        opacity: 0;

        &:focus ~ .custom-file-label {
            border-color: $input-focus-border-color;
            box-shadow: $input-focus-box-shadow;
        }
    }

    .custom-file-label {
        position: absolute;
        top: 0;
        right: 0;
        left: 0;
        z-index: 1;
        padding: $input-padding-y $input-padding-x;
        font-weight: 400;
        line-height: $line-height-base;
        color: $input-color;
        background-color: $input-bg;
        border: $input-border-width solid $input-border-color;
        border-radius: $input-border-radius;

        &::after {
            position: absolute;
            top: 0;
            right: 0;
            bottom: 0;
            z-index: 3;
            display: block;
            padding: $input-padding-y $input-padding-x;
            line-height: $line-height-base;
            color: $input-color;
            content: "Browse";
            background-color: #e9ecef;
            border-left: $input-border-width solid $input-border-color;
            border-radius: 0 $input-border-radius $input-border-radius 0;
        }
    }
}